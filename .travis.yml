# This file has been generated -- see https://github.com/hvr/multi-ghc-travis
language: c
sudo: false

cache:
  directories:
    - $HOME/.cabsnap
    - $HOME/.cabal/packages

before_cache:
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/build-reports.log
  - rm -fv $HOME/.cabal/packages/hackage.haskell.org/00-index.tar

matrix:
  include:
    - env: CABALVER=1.16 GHCVER=7.4.2
      compiler: ": #GHC 7.4.2"
      addons: {apt: {packages: [cabal-install-1.16,ghc-7.4.2], sources: [hvr-ghc]}}
    - env: CABALVER=1.16 GHCVER=7.6.3
      compiler: ": #GHC 7.6.3"
      addons: {apt: {packages: [cabal-install-1.16,ghc-7.6.3], sources: [hvr-ghc]}}
    - env: CABALVER=1.18 GHCVER=7.8.4
      compiler: ": #GHC 7.8.4"
      addons: {apt: {packages: [cabal-install-1.18,ghc-7.8.4], sources: [hvr-ghc]}}
    - env: CABALVER=head GHCVER=head
      compiler: ": #GHC head"
      addons: {apt: {packages: [cabal-install-head,ghc-head], sources: [hvr-ghc]}}

  allow_failures:
    - env: CABALVER=head GHCVER=head

before_install:
 - unset CC
 - export PATH=/opt/ghc/$GHCVER/bin:/opt/cabal/$CABALVER/bin:$PATH

install:
 - cabal --version
 - echo "$(ghc --version) [$(ghc --print-project-git-commit-id 2> /dev/null || echo '?')]"
 - if [ -f $HOME/.cabal/packages/hackage.haskell.org/00-index.tar.gz ];
   then
     zcat $HOME/.cabal/packages/hackage.haskell.org/00-index.tar.gz >
          $HOME/.cabal/packages/hackage.haskell.org/00-index.tar;
   fi
 - travis_retry cabal update -v
 - sed -i 's/^jobs:/-- jobs:/' ${HOME}/.cabal/config
 - cabal install --only-dependencies --enable-tests --enable-benchmarks --dry -v > installplan.txt
 - sed -i -e '1,/^Resolving /d' installplan.txt; cat installplan.txt

# check whether current requested install-plan matches cached package-db snapshot
 - if diff -u installplan.txt $HOME/.cabsnap/installplan.txt;
   then
     echo "cabal build-cache HIT";
     rm -rfv .ghc;
     cp -a $HOME/.cabsnap/ghc $HOME/.ghc;
     cp -a $HOME/.cabsnap/lib $HOME/.cabsnap/share $HOME/.cabsnap/bin $HOME/.cabal/;
   else
     echo "cabal build-cache MISS";
     rm -rf $HOME/.cabsnap;
     mkdir -p $HOME/.ghc $HOME/.cabal/lib $HOME/.cabal/share $HOME/.cabal/bin;
     cabal install --only-dependencies --enable-tests --enable-benchmarks;
   fi
 
# snapshot package-db on cache miss
 - if [ ! -d $HOME/.cabsnap ];
   then
      echo "snapshotting package-db to build-cache";
      mkdir $HOME/.cabsnap;
      cp -a $HOME/.ghc $HOME/.cabsnap/ghc;
      cp -a $HOME/.cabal/lib $HOME/.cabal/share $HOME/.cabal/bin installplan.txt $HOME/.cabsnap/;
   fi

# Here starts the actual work to be performed for the package under test;
# any command which exits with a non-zero exit code causes the build to fail.
script:
 - if [ -f configure.ac ]; then autoreconf -i; fi
 - cabal configure --enable-tests --enable-benchmarks -v2  # -v2 provides useful information for debugging
 - cabal build   # this builds all libraries and executables (including tests/benchmarks)
 - cabal test
 - cabal check
 - cabal sdist   # tests that a source-distribution can be generated

# Check that the resulting source distribution can be built & installed.
# If there are no other `.tar.gz` files in `dist`, this can be even simpler:
# `cabal install --force-reinstalls dist/*-*.tar.gz`
 - SRC_TGZ=$(cabal info . | awk '{print $2;exit}').tar.gz &&
   (cd dist && cabal install --force-reinstalls "$SRC_TGZ")

deploy:
  provider: hackage
  on:
    condition: "$GHCVER = 7.8.4"
    tags: true
  username: "JoachimBreitner"
  password:
    secure: "jnTUMxGxLIBZChdn1AEF1/leSpzYA1u2Eos5ale+r1imkzkdKsEzZyd4lk/v1I5VIYXp7dDv+iM8E2KI5K4voyUGmrrhEiebsrxt0SMSPvyakE3ofpm/SbuOXHPgi6OCw2eF15LtcMArUd9CTKpAm+p+mfEtnDwiGU2HejS5YrislhZcpeq8unqyD51Q03hMlV9FoGCfyPmQJjTQDZPOFoN7ya5it2OKnfZFVthzgILf3zbsudcoJr60PI/CXN20xtlKcRFVWJ9xnELvhXCH89LmOIXDKonny7xksFBrI3bIldkbn/aZp3x4mbSggd+iugut/+V8TeMkm45MYRRC7NunsMN/UsBrQuAvLIVPVCxFkOJLmjkG6593V17Q5og+ibbrlVqfa1pObKi2tW2P3B0p6STQODVGOevP2F3y4PLuVqr8B3dUekEhvRRPdstlEHvioX9jhy1UWWDv167XP4qEIY4NH6trd/bRr5uCkA+o6ezMdX/MRxYtuvIQEmurSPxdeaMmv//L+gOep4Wj0Dx9qpcZpAUXh2kfSUsC6Oxe7wHjl23EPUNyMRNNH5OcCp/s8Sw+feQOhpjJcDx8YQdx2LVPP9MW1i00NB1kPbTulTxsHsuL5MkjSb+Q+mtv/uW5dJVr0x3eIQGvnkhm0CmWsdVja2Nm1D2xM0k9vOE="
